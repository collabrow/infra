name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      confirm_destroy:
        description: 'Type "DESTROY" to confirm'
        required: true
        type: string

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: github.event.inputs.confirm_destroy == 'DESTROY'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Destroy infrastructure
        run: |
          pnpm run build
          cdk destroy PostgresStack-${{ github.event.inputs.environment }} --force
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Notify destruction
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ðŸ”¥ Infrastructure destroyed for environment: **${{ github.event.inputs.environment }}**`
            });
